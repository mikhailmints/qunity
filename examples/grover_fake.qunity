/*
"Fake" Grover's Algorithm - in this version, we are passing in the answer
to the algorithm itself, which means that it can't be used for an arbitrary
oracle. This demonstrates the amplitude amplification in the algorithm. 
*/

def @grover_iter{#n, $answer : Num{#n}} : Num{#n} -> Num{#n} :=
    lambda x ->
    x |> @reflect{Num{#n}, $answer}
    |> @reflect{Num{#n}, $repeated{#n, Bit, $plus}}
end

/*
Run Grover's algorithm for n_iter iterations
*/
def $grover{#n, $answer : Num{#n}, #n_iter} : Num{#n} :=
    if #n_iter = 0 then
        $repeated{#n, Bit, $plus}
    else
        $grover{#n, $answer, #n_iter - 1} |> @grover_iter{#n, $answer}
    endif
end

def #n := 5 end
def $answer : Num{#n} := ($0, ($1, ($1, ($0, ($0, ()))))) end

$grover{#n, $answer, 4}
