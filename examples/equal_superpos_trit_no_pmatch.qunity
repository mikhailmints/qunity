Bit0
|> u3 {2 * arccos(sqrt(1 / 3)), 0, 0}
|> lambda x {Bit} -> ctrl {Bit, Bit * Bit} x [
    Bit0 -> (x, Bit0);
    Bit1 -> (x, BitPlus)
]
|> lambda x {Bit * Bit} -> ctrl {Bit * Bit, (Bit * Bit) * Maybe <Bit>} x [
    (Bit0, Bit0) -> (x, Nothing <Bit>);
    (Bit1, Bit0) -> (x, Just <Bit> of Bit0);
    (Bit1, Bit1) -> (x, Just <Bit> of Bit1)
]
|> lambda (
    ctrl {Maybe <Bit>, (Bit * Bit) * Maybe <Bit>} x' [
        Nothing <Bit> -> ((Bit0, Bit0), x');
        Just <Bit> of Bit0 -> ((Bit1, Bit0), x');
        Just <Bit> of Bit1 -> ((Bit1, Bit1), x')
    ]
) {(Bit * Bit) * Maybe <Bit>} -> x'
