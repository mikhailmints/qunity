def @ApplyPhase {#N, #P} : NTensorT {#N, Bit} -> NTensorT {#N, Bit} :=
    if #N = 0 then
        @Id {Unit}
    else
        lambda (x0, x') ->
            (ctrl x0 [
                $0 -> x0;
                $1 -> x0 |> gphase {2 * pi * #P}
            ], @ApplyPhase {#N - 1, 2 * #P} (x'))
    endif
end

def $PhaseEstimation {#N, #P} : NTensorT {#N, Bit} :=
    $NTensorE {#N, Bit, $Plus}
    |> @ApplyPhase {#N, #P}
    |> @Adjoint {NTensorT {#N, Bit}, NTensorT {#N, Bit}, @Qft {#N}}
    |> @Reverse {#N, Bit}
end

$PhaseEstimation {5, 1/3}
