def @apply_phase{#n, #p} : Num{#n} -> Num{#n} :=
    if #n = 0 then
        @id{Unit}
    else
        lambda (x0, x') ->
            (ctrl x0 [
                $0 -> x0;
                $1 -> x0 |> gphase{2 * pi * #p}
            ], @apply_phase{#n - 1, 2 * #p}(x'))
    endif
end

def $phase_estimation{#n, #p} : Num{#n} :=
    $repeated{#n, Bit, $plus}
    |> @apply_phase{#n, #p}
    |> @adjoint{Num{#n}, Num{#n}, @qft{#n}}
    |> @reverse{#n, Bit}
end

$phase_estimation{5, 1/3}
