def #N := 2 end
def #Nbits := 2 end

type LST := List {#N, Bit} end
def @APP {$X : Bit} : LST -> LST := @ListAppendConst {#N, Bit, $X} end
def @LEN : LST -> NTensorT {#Nbits, Bit} := @ListLength {#N, Bit, #Nbits} end

$ListEmpty {#N, Bit} |>
// Append Bit1 to the list with 1/2 probability
lambda l -> match $Plus [
    $0 -> l;
    $1 -> l |> @APP{$1}
] |>
// If the list is empty, append Bit0. If it has length 1, append Bit1.
lambda l -> match @LEN(l) [
    $NumToState{#Nbits, 0} -> l |> @APP{$0};
    $NumToState{#Nbits, 1} -> l |> @APP{$1};
]
