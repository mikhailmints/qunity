OPENQASM 3.0;
include "stdgates.inc";
qubit[5] q;
bit[2] out;
bit[3] err;
// right prep [0]
x q[0];
// right out [0]
// adjoint in [0]
// adjoint out [0]
// context_partition in [0]
// context_partition out [0]
// share in [0]
// share prep [1]
ctrl @ x q[0], q[1];
// share out [0, 1]
// adjoint in [0]
// context_partition out [0]
// context_partition in [0]
// adjoint out [0]
// adjoint in [1]
// context_partition out [1]
// context_partition in [1]
// adjoint out [1]
// pair in [0, 1]
// pair out [0, 1]
// adjoint in [0, 1]
// pair out [0, 1]
// pair in [0, 1]
// adjoint out [1]
// context_partition in [1]
// context_partition out [1]
// adjoint in [1]
// adjoint out [0]
// context_partition in [0]
// context_partition out [0]
// adjoint in [0]
// share out [0, 1]
ctrl @ x q[0], q[1];
// share prep [1]
// share in [0]
// context_partition out [0]
// context_partition in [0]
// adjoint out [0]
// adjoint in [0]
// adjoint out [0]
// adjoint flag [1]
// adjoint in [0]
// adjoint out [0]
// context_partition in [0]
// context_partition out [0]
// share in [0]
// share prep [2]
ctrl @ x q[0], q[2];
// share out [0, 2]
// adjoint in [0]
// context_partition out [0]
// context_partition in [0]
// adjoint out [0]
// adjoint in [2]
// context_partition out [2]
// context_partition in [2]
// adjoint out [2]
// pair in [0, 2]
// pair out [0, 2]
// adjoint in [0, 2]
// pair out [0, 2]
// pair in [0, 2]
// adjoint out [2]
// context_partition in [2]
// context_partition out [2]
// adjoint in [2]
// adjoint out [0]
// context_partition in [0]
// context_partition out [0]
// adjoint in [0]
// share out [0, 2]
ctrl @ x q[0], q[2];
// share prep [2]
// share in [0]
// context_partition out [0]
// context_partition in [0]
// adjoint out [0]
// adjoint in [0]
// adjoint out [0]
// adjoint flag [2]
// adjoint in [0]
// adjoint out [0]
// context_partition in [0]
// context_partition out [0]
// share in [0]
// share prep [3]
ctrl @ x q[0], q[3];
// share out [0, 3]
// adjoint in [0]
// context_partition out [0]
// context_partition in [0]
// adjoint out [0]
// adjoint in [3]
// context_partition out [3]
// context_partition in [3]
// adjoint out [3]
// pair in [0, 3]
// pair out [0, 3]
// adjoint in [0, 3]
// pair out [0, 3]
// pair in [0, 3]
// adjoint out [3]
// context_partition in [3]
// context_partition out [3]
// adjoint in [3]
// adjoint out [0]
// context_partition in [0]
// context_partition out [0]
// adjoint in [0]
// share out [0, 3]
ctrl @ x q[0], q[3];
// share prep [3]
// share in [0]
// context_partition out [0]
// context_partition in [0]
// adjoint out [0]
// adjoint in [0]
// adjoint out [0]
// adjoint flag [3]
// adjoint in [0]
// adjoint out [0]
// context_partition in [0]
// context_partition out [0]
// share in [0]
// share prep [4]
ctrl @ x q[0], q[4];
// share out [0, 4]
// adjoint in [0]
// context_partition out [0]
// context_partition in [0]
// adjoint out [0]
// adjoint in [4]
// context_partition out [4]
// context_partition in [4]
// adjoint out [4]
// pair in [0, 4]
// pair out [0, 4]
out[0] = measure q[0];
out[1] = measure q[4];
err[0] = measure q[1];
err[1] = measure q[2];
err[2] = measure q[3];
